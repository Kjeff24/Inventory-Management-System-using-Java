/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package inventoryproject;

import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.RowFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author KJEFF
 */
public class Category extends javax.swing.JInternalFrame {

    /**
     * Creates new form Category
     */
    public Category() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
        DisplayCat();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtcatid = new javax.swing.JTextField();
        txtcatname = new javax.swing.JTextField();
        addbtn = new javax.swing.JButton();
        updbtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        searchfield = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CategoryTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(192, 27, 54));
        jLabel1.setText("Category Id:");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(192, 27, 54));
        jLabel2.setText("Category name:");

        txtcatid.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        txtcatname.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        addbtn.setBackground(new java.awt.Color(192, 27, 54));
        addbtn.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        addbtn.setForeground(new java.awt.Color(255, 255, 255));
        addbtn.setText("Add");
        addbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addbtnMouseClicked(evt);
            }
        });

        updbtn.setBackground(new java.awt.Color(192, 27, 54));
        updbtn.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        updbtn.setForeground(new java.awt.Color(255, 255, 255));
        updbtn.setText("Update");
        updbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updbtnMouseClicked(evt);
            }
        });

        deletebtn.setBackground(new java.awt.Color(192, 27, 54));
        deletebtn.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        deletebtn.setForeground(new java.awt.Color(255, 255, 255));
        deletebtn.setText("Delete");
        deletebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletebtnMouseClicked(evt);
            }
        });

        searchfield.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        searchfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchfieldKeyReleased(evt);
            }
        });

        jLabel3.setText("Search:");

        CategoryTable.setAutoCreateRowSorter(true);
        CategoryTable.setBackground(new java.awt.Color(192, 27, 54));
        CategoryTable.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        CategoryTable.setForeground(new java.awt.Color(255, 255, 255));
        CategoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Category Id", "Category name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CategoryTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        CategoryTable.setSelectionForeground(new java.awt.Color(192, 27, 54));
        CategoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CategoryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(CategoryTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 131, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtcatname, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcatid, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(320, 320, 320))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(searchfield, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addbtn)
                        .addGap(18, 18, 18)
                        .addComponent(updbtn)
                        .addGap(18, 18, 18)
                        .addComponent(deletebtn)))
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(90, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtcatid, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addbtn)
                    .addComponent(updbtn)
                    .addComponent(deletebtn))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcatname, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -27, 770, 620));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void Clearfield()
    {
        txtcatid.setText("");
        txtcatname.setText("");
    }
    
    // declare variables to allow to connect, create and edit database
    Connection Con = null;
    Statement St = null;
    ResultSet Rs = null;
    
    // Displays category in the JTable
    public void DisplayCat()
    {
        try{
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/InventoryDB", "root", "root");
            St = Con.createStatement();
            Rs = St.executeQuery("select catid as 'Category Id', catname as 'Category Name' from categorytb");
            CategoryTable.setModel(DbUtils.resultSetToTableModel(Rs));
            
        }catch(SQLException e)
        {
            e.printStackTrace();
        }
    }
    
    
    // Adds category id and category name in the database and then displays in the JTable
    private void addbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addbtnMouseClicked
        if(txtcatid.getText().isEmpty() || txtcatname.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Missing Information");
        }else
        {
            try{
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/InventoryDB", "root", "root");
                PreparedStatement add = Con.prepareStatement("insert into categorytb values(?,?)");
                add.setInt(1, Integer.valueOf(txtcatid.getText()));
                add.setString(2, txtcatname.getText());
                int row = add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Category Successfully Added");
                Con.close();
                Clearfield();
                DisplayCat();
            }catch(SQLException e)
            {
                e.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_addbtnMouseClicked

    // when a row is clicked, it set items in the row into the JTextfields
    private void CategoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CategoryTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) CategoryTable.getModel();
        int selectedrow = CategoryTable.getSelectedRow();
        txtcatid.setText(model.getValueAt(selectedrow, 0).toString());
        txtcatname.setText(model.getValueAt(selectedrow, 1).toString());
    }//GEN-LAST:event_CategoryTableMouseClicked

    // Allows users to eneter category id, then deletes the row
    private void deletebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletebtnMouseClicked
        if(txtcatid.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Enter the Cat id of the category you want to delete");
        }
        else
        {
            try{
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/InventoryDB", "root", "root");
                String Id = txtcatid.getText();
                String Query = "Delete from inventorydb.categorytb where catid="+Id;
                Statement Add = Con.createStatement();
                Add.executeUpdate(Query);
                DisplayCat();
                txtcatid.setText("");
                txtcatname.setText("");
                JOptionPane.showMessageDialog(null, "Category has been successfully deleted!");
            }catch(SQLException | NumberFormatException e)
            {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_deletebtnMouseClicked

    // Updates items in the database and displays the updated items in the JTable
    private void updbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updbtnMouseClicked
        if(txtcatid.getText().isEmpty() || txtcatname.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Missing Information!");
        }
        else
        {
            try
            {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/InventoryDB", "root", "root");
                String UpdateQuery = "update inventorydb.categorytb set catname='"+txtcatname.getText()+"'"+" where catid="+txtcatid.getText();
                Statement Add = Con.createStatement();
                Add.executeUpdate(UpdateQuery);
                JOptionPane.showMessageDialog(null, "Category successfully updated");
                DisplayCat();
                Con.close();
            }catch(SQLException e)
            {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_updbtnMouseClicked

    private void searchfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchfieldKeyReleased
        DefaultTableModel model = (DefaultTableModel) CategoryTable.getModel();
        String search = searchfield.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter(model);
        CategoryTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));

    }//GEN-LAST:event_searchfieldKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CategoryTable;
    private javax.swing.JButton addbtn;
    private javax.swing.JButton deletebtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchfield;
    private javax.swing.JTextField txtcatid;
    private javax.swing.JTextField txtcatname;
    private javax.swing.JButton updbtn;
    // End of variables declaration//GEN-END:variables
}
